name: Telegram Notifications

on:
  issues:
    types: [opened, reopened, deleted, closed]
  push:
  pull_request:
  issue_comment:
  pull_request_review_comment:

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
    - name: Send Issues notifications to Telegram
      if: github.event_name == 'issues'
      run: curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="${MESSAGE}" >> /dev/null
      env:
        # Message content for issues
        MESSAGE: "The Issue [ ${{ github.event.issue.title }} ] was ${{ github.event.action }} by ${{ github.actor }}: \n${{ github.event.issue.html_url }}"
      
    - name: Send Push notifications to Telegram
      if: github.event_name == 'push'
      run: curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="${MESSAGE}" >> /dev/null
      env:
        # Message content for issues
        MESSAGE: "${{ github.event_name }} commit in ${{ github.repository }} by ${{ github.actor }}. \n \n [${{github.sha}}@${{ github.ref }}] \n \n ${{ github.commits.url }}"
  
    - name: Send PR notifications to Telegram
      if: github.event_name == 'pull_request'
      run: curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="${MESSAGE}" >> /dev/null
      env:
        # Message content for issues
        MESSAGE: "${{ github.event_name }} ${{ github.event.action }} in ${{ github.repository }} by ${{ github.actor }}. \n \n [${{github.sha}}@${{ github.ref }}]"
      
